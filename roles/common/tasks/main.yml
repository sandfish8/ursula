---
- name: set hostname
  hostname: name={{ hostname }}
  when: hostname is defined

- block:
  - name: ubuntu apt source list
    template: src=etc/apt/sources.list dest=/etc/apt/sources.list
    when: openstack.ubuntu_mirror is defined
    notify:
      - update apt index

  - meta: flush_handlers

  - name: update apt index
    apt: update_cache=yes cache_valid_time=3600
    tags: ['prereboot']
    register: result
    until: result|succeeded
    retries: 5
  when: ansible_distribution == "Ubuntu"

- name: set selinux to permissive on redhat
  selinux:
    policy: targeted
    state: permissive
  when: ansible_distribution == "RedHat"
  tags: selinux

- name: secure paths sudoers operations
  lineinfile:
    dest: /etc/sudoers
    regexp: "^Defaults.*?secure_path"
    line: 'Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"'
    state: present
  tags: sudoers

- name: disable require tty for sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: "^Defaults.*?requiretty"
    state: absent
  tags: sudoers

- include: system-tools.yml

- include: python.yml
  tags: pip, python
  

- include: ruby.yml
  tags: ruby

- name: set UTC timezone for Ubuntu
  template: src=etc/timezone dest=/etc/timezone owner=root group=root mode=0644
  notify:
    - update timezone
  when: ansible_distribution in ["Ubuntu"]

- name: Check timezone for RHEL
  command: timedatectl status | grep Timezone | grep UTC
  changed_when: false
  failed_when: false
  register: timezone
  when: ansible_distribution in ["CentOS","RedHat"]

- name: set UTC timezone for RHEL
  command: timedatectl set-timezone UTC
  when: ansible_distribution in ["CentOS","RedHat"] and
        timezone.rc != 0

- name: state path base directory
  file: dest={{ state_path_base }} state=directory

- include: ssl.yml
  tags: [ssl, common-ssl]

- include: ssh.yml
  tags: ssh

- include: networking.yml

- include: password-policy.yml

- include: system-file-permissions.yml

- name: remove default sysctl.conf's entry
  sysctl:
    name: "{{ item.name }}"
    state: absent
    sysctl_file: /etc/sysctl.conf
    ignoreerrors: yes
  with_items: "{{ common.os_tuning_params_clean }}"

- include: ufw.yml
  when: os == 'ubuntu'
  tags: ufw

- include: firewalld.yml
  when: os == 'rhel'
  tags: firewalld

- include: ntp.yml
  tags: ntp

# Include serial console before kernel-tuning to build serial_console_cmdline
- include: serial-console.yml tty={{ common.serial_console.name }}
  when: common.serial_console.enabled | bool and os == 'ubuntu'
  tags: ['prereboot']

- include: ipmi.yml
  when: common.ipmi.enabled
  tags: ['prereboot']

- include: kernel-tuning.yml
  tags: ['prereboot']
  when: os == 'ubuntu'

- include: disable-swap.yml

- include: hwraid.yml
  when: common.hwraid.enabled and ansible_architecture != "ppc64le"
  tags: hwraid

- include: hwraid-ppc.yml
  when: common.hwraid.enabled and ansible_architecture == "ppc64le"
  tags: hwraid

- name: remove unwanted packages
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ common.packages_to_remove }}"
  register: result
  until: result|succeeded
  retries: 5

- name: fetch Ursula revision
  local_action: command git describe --tags
  run_once: true
  become: no
  register: ursula_git_describe

- name: store Ursula revision
  set_fact: ursula_revision={{ ursula_git_describe.stdout }}

# run this last so we only update if run was successful
- name: drop an motd with ursula metadata
  template: src=etc/update-motd.d/90-ursula-motd dest=/etc/update-motd.d/90-ursula-motd mode=0755
  when: os == 'ubuntu'

- name: drop ursula release file
  template: src=etc/ursula-release dest=/etc/ursula-release mode=0640

- name: include stack name in /etc/issue
  lineinfile: dest=/etc/issue regexp="^{{ stack_env }} OpenStack Node" line="{{ stack_env }} OpenStack Node"

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool

- include: audit-logging.yml
  tags:
    - logrotate
    - logging
  when: logging.enabled|default('True')|bool

- include: serverspec.yml
  tags:
    - serverspec
  when: serverspec.enabled|default('False')|bool

- include: inspec.yml
  tags:
    - inspec
  when: inspec.enabled|default('False')|bool
